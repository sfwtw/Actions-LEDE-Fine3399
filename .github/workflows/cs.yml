name: cs Update Checker

env:
  REPO_URL: https://github.com/sfwtw/Actions-LEDE-Fine3399
  REPO_BRANCH: main
  TZ: Asia/Shanghai
  CACHE_VERSION: "v1"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.check_updates.outputs.has_updates }}
    
    steps:
      - name: 准备工作目录
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 缓存提交信息
        uses: actions/cache@v3
        with:
          path: |
            .cache/updates_1.txt
            .cache/updates_2.txt
            .cache/updates_3.txt
            .cache/last_commit.txt
          key: commit-cache-${{ env.CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            commit-cache-${{ env.CACHE_VERSION }}-

      - name: 检查更新
        id: check_updates
        run: |
          mkdir -p .cache
          echo "::group::克隆仓库"
          git clone --depth 100 $REPO_URL -b $REPO_BRANCH temp
          cd temp
          
          current_commit=$(git rev-parse HEAD)
          echo "当前最新提交: ${current_commit}"
          
          if [ -f ../.cache/last_commit.txt ]; then
            last_commit=$(cat ../.cache/last_commit.txt)
            echo "上次检查的提交: ${last_commit}"
          else
            last_commit=$(git rev-parse HEAD^)
            echo "首次运行，记录当前提交"
            echo "${current_commit}" > ../.cache/last_commit.txt
            echo "has_updates=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          if [ "$last_commit" != "$current_commit" ]; then
            echo "检测到新更新"
            echo "${current_commit}" > ../.cache/last_commit.txt
            echo "has_updates=true" >> $GITHUB_OUTPUT
            
            # 触发编译工作流
            curl -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.TOKEN }}" \
              -d "{\"event_type\":\"test\"}" \
              || echo "触发编译失败，请检查 TOKEN 权限"
          else
            echo "当前已是最新版本"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: 清理工作流记录
        if: always()
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3
